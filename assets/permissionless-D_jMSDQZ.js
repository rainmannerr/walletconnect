import{t as G,g as U,a as nt,s as ue,c as rt,b as st,B as h,E as Me,U as Y,d as it,e as D,r as $e,f as He,h as ot,v as ct,i as b,j as Oe,k as ut,l as te,m as ae,C as ne,n as re,o as H,p as $,q as de,u as dt,w as lt,x as le,y as pt,z as qe,A as yt,D as mt,F as oe,G as Be,H as Ye}from"./viem-CINa55yg.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new e.Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="440ce29d-1e52-4c97-99db-8fc6aa981cb9",e._sentryDebugIdIdentifier="sentry-dbid-440ce29d-1e52-4c97-99db-8fc6aa981cb9")}catch{}})();const ft=async e=>Number(await e.request({method:"eth_chainId",params:[]})),ht={"0x0":"reverted","0x1":"success"};function E(e){if(typeof e!="function")return e==null||typeof e=="string"||typeof e=="boolean"?e:typeof e=="bigint"?G(e):e._isBigNumber!=null||typeof e!="object"?G(e).replace(/^0x0/,"0x"):Array.isArray(e)?e.map(t=>E(t)):Object.keys(e).reduce((t,a)=>(t[a]=E(e[a]),t),{})}function z(e){if(e&&e.length>=42)return U(e.slice(0,42))}const Ee="0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789",Ga="0x0000000071727De22E5E9d8BAf0edAc6f37da032",T=e=>e===Ee?"v0.6":"v0.7";function gt(e,t){return T(e)==="v0.6"}function bt(e,t){return T(e)==="v0.7"}const B=async(e,t)=>{const a=await nt(e,{address:t});return((a==null?void 0:a.length)??0)>2};function Pt(e){return{address:e.account.address,type:"local",source:"custom",publicKey:e.account.address,signMessage:async({message:t})=>e.signMessage({message:t}),async signTypedData(t){return ue(e,{account:e.account,...t})}}}const xa=async(e,t)=>{let a;try{[a]=await e.request({method:"eth_requestAccounts"})}catch{[a]=await e.request({method:"eth_accounts"})}const n=rt({account:a,transport:st(e)});return Pt(n)};class P extends h{constructor({docsPath:t}={}){super(["Could not find an Account to execute with this Action.","Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient."].join(`
`),{docsPath:t,docsSlug:"account"}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"AccountOrClientNotFoundError"})}}function w(e){return typeof e=="string"?{address:e,type:"json-rpc"}:e}function ze(e){const t=Object.entries(e).map(([n,r])=>r===void 0||r===!1?null:[n,r]).filter(Boolean),a=t.reduce((n,[r])=>Math.max(n,r.length),0);return t.map(([n,r])=>`  ${`${n}:`.padEnd(a+1)}  ${r}`).join(`
`)}class wt extends h{constructor(t,{userOperation:a,entryPoint:n,docsPath:r}){const s=ze({sender:a.sender,nonce:a.nonce,initCode:a.initCode,callData:a.callData,callGasLimit:a.callGasLimit,verificationGasLimit:a.verificationGasLimit,preVerificationGas:a.preVerificationGas,maxFeePerGas:a.maxFeePerGas,maxPriorityFeePerGas:a.maxPriorityFeePerGas,paymasterAndData:a.paymasterAndData,signature:a.signature,factory:a.factory,factoryData:a.factoryData,paymaster:a.paymaster,paymasterVerificationGasLimit:a.paymasterVerificationGasLimit,paymasterPostOpGasLimit:a.paymasterPostOpGasLimit,paymasterData:a.paymasterData,entryPoint:n});super(t.shortMessage,{cause:t,docsPath:r,metaMessages:[...t.metaMessages?[...t.metaMessages," "]:[],"Estimate Gas Arguments:",s].filter(Boolean)}),Object.defineProperty(this,"cause",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"EstimateUserOperationGasError"}),this.cause=t}}class pe extends h{constructor({cause:t,sender:a,docsPath:n}={}){super([`Smart account ${a} is already deployed.`,"","Possible solutions:",'• Remove the initCode from the user operation and set it to "0x"',"",n?`Docs: ${n}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"SenderAlreadyDeployedError"})}}Object.defineProperty(pe,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa10/});class ye extends h{constructor({cause:t,docsPath:a}={}){super(["EntryPoint failed to create the smart account with the initCode provided.","","Possible reasons:","• The initCode ran out of gas","• The initCode reverted during the account deployment process","","Possible solutions:","• Verify that the factory address in the initCode is correct (the factory address is the first 20 bytes of the initCode).","• Verify that the initCode is correct.","• Check whether the verificationGasLimit is sufficient for the initCode to complete without running out of gas.","",a?`Docs: ${a}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"InitCodeRevertedError"})}}Object.defineProperty(ye,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa13/});class me extends h{constructor({cause:t,sender:a,docsPath:n}){super(["The initCode returned a different smart account address than expected.",`Expected: ${a}`,"","Possible reasons:","• Account deployed with the initCode provided does not match match the sender address provided","","Possible solutions:","• Verify that the sender address was generated deterministically from the initCode. (consider leveraging functions like getSenderAddress)","• Verify that the factory address in the initCode is correct (the factory address is the first 20 bytes of the initCode)","• Verify that the initCode is correct.","",n?`Docs: ${n}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"SenderAddressMismatchError"})}}Object.defineProperty(me,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa14/});class fe extends h{constructor({cause:t,sender:a,docsPath:n}){super([`The initCode did not deploy the sender at the address ${a}.`,"","Possible reasons:","• The initCode factory is not creating an account.","• The initCode factory is creating an account, but is not implemented correctly as it is not deploying at the sender address","","Possible solutions:","• Verify that the factory address in the initCode is correct (the factory address is the first 20 bytes of the initCode).","• Verify that the initCode factory is implemented correctly. The factory must deploy the smart account at the sender address.","",n?`Docs: ${n}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"InitCodeDidNotDeploySenderError"})}}Object.defineProperty(fe,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa15/});class he extends h{constructor({cause:t,sender:a,docsPath:n}){super([`Smart account ${a} is not deployed.`,"","Possible reasons:","• An initCode was not specified, but the sender address (i.e. the smart account) is not deployed.","","Possible solutions:","• If this is the first transaction by this account, make sure the initCode is included in the user operation.","• If the smart account is already supposed to be deployed, verify that you have selected the correct sender address for the user operation.","",n?`Docs: ${n}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"SenderNotDeployedError"})}}Object.defineProperty(he,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa20/});class ge extends h{constructor({cause:t,sender:a,docsPath:n}){super([`You are not using a paymaster, and the ${a} address did not have enough native tokens to cover the gas costs associated with the user operation.`,"","Possible solutions:","• If you are not using a paymaster, verify that the sender address has enough native tokens to cover the required prefund. Consider leveraging functions like getRequiredPrefund.","• If you are looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is set.","",n?`Docs: ${n}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"SmartAccountInsufficientFundsError"})}}Object.defineProperty(ge,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa21/});class be extends h{constructor({cause:t,docsPath:a}){super(["The signature used in the user operation is not valid, because it is outside of the time range it specified.","","Possible reasons:","• This error occurs when the block.timestamp falls after the validUntil timestamp, or before the validAfter timestamp.","","Possible solutions:","• If you are looking to use time-based signatures, verify that the validAfter and validUntil fields are set correctly and that the user operation is sent within the specified range.","• If you are not looking to use time-based signatures, verify that the validAfter and validUntil fields are set to 0.","",a?`Docs: ${a}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"SmartAccountSignatureValidityPeriodError"})}}Object.defineProperty(be,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa22/});class Pe extends h{constructor({cause:t,sender:a,docsPath:n}){super([`The smart account ${a} reverted or ran out of gas during the validation of the user operation.`,"","Possible solutions:","• Verify that the verificationGasLimit is high enough to cover the validateUserOp function's gas costs.","• Make sure validateUserOp returns uint(1) for invalid signatures, and MUST NOT REVERT when the signature is invalid","• If you are not using a paymaster, verify that the sender address has enough native tokens to cover the required pre fund. Consider leveraging functions like getRequiredPrefund.","• Verify that the validateUserOp function is implemented with the correct logic, and that the user operation is supposed to be valid.","",n?`Docs: ${n}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"SmartAccountValidationRevertedError"})}}Object.defineProperty(Pe,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa23/});class we extends h{constructor({cause:t,sender:a,nonce:n,docsPath:r}){const s=n>>BigInt(64),i=n&0xffffffffffffffffn;super([`The smart account ${a} nonce is invalid.`,`Nonce sent: ${n} (key: ${s}, sequence: ${i})`,"","Possible solutions:","• Verify that you are using the correct nonce for the user operation. The nonce should be the current nonce of the smart account for the selected key. Consider leveraging functions like getAccountNonce.","• Verify that the nonce is formatted correctly.","",r?`Docs: ${r}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"InvalidSmartAccountNonceError"})}}Object.defineProperty(we,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa25/});class Dt extends h{constructor(t,{userOperation:a,entryPoint:n,docsPath:r}){const s=ze({...a,entryPoint:n});super(t.shortMessage,{cause:t,docsPath:r,metaMessages:[...t.metaMessages?[...t.metaMessages," "]:[],"sendUserOperation Arguments:",s].filter(Boolean)}),Object.defineProperty(this,"cause",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"SendUserOperationError"}),this.cause=t}}class De extends h{constructor({cause:t,paymasterAndData:a,docsPath:n}={}){const r=a?z(a):"0x";super([`Paymaster ${r} is not deployed.`,"","Possible solutions:","• Verify that the paymasterAndData field is correct, and that the first 20 bytes are the address of the paymaster contract you intend to use.","• Verify that the paymaster contract is deployed on the network you are using.","",n?`Docs: ${n}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"PaymasterNotDeployedError"})}}Object.defineProperty(De,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa30/});class Ge extends h{constructor({cause:t,paymasterAndData:a,docsPath:n}={}){const r=a?z(a):"0x";super([`Paymaster ${r} contract does not have enough funds deposited into the EntryPoint contract to cover the required funds for the user operation.`,"","Possible solutions:","• If you are using your own paymaster contract, deposit more funds into the EntryPoint contract through the deposit() function of the paymaster contract.","• Verify that the paymasterAndData field is correct, and that the first 20 bytes are the address of the paymaster contract you intend to useVerify that the paymasterAndData field is correct, and that the first 20 bytes are the address of the paymaster contract you intend to use.","• If you are using a paymaster service, reach out to them.","",n?`Docs: ${n}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"PaymasterDepositTooLowError"})}}Object.defineProperty(Ge,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa31/});class xe extends h{constructor({cause:t,paymasterAndData:a,docsPath:n}){const r=a?z(a):"0x";super([`Paymaster ${r}'s data used in the paymasterAndData field of the user operation is not valid, because it is outside of the time range it specified.`,"","Possible reasons:","• This error occurs when the block.timestamp falls after the validUntil timestamp, or before the validAfter timestamp.","","Possible solutions:","• If you are using your own paymaster contract and using time-based signatures, verify that the validAfter and validUntil fields are set correctly and that the user operation is sent within the specified range.","• If you are using your own paymaster contract and not looking to use time-based signatures, verify that the validAfter and validUntil fields are set to 0.","• If you are using a service, contact your service provider for their paymaster's validity.","",n?`Docs: ${n}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"PaymasterValidityPeriodError"})}}Object.defineProperty(xe,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa32/});class ve extends h{constructor({cause:t,paymasterAndData:a,docsPath:n}){const r=a?z(a):"0x";super([`The validatePaymasterUserOp function of the paymaster ${r} either reverted or ran out of gas.`,"","Possible solutions:","• Verify that the verificationGasLimit is high enough to cover the validatePaymasterUserOp function's gas costs.","• If you are using your own paymaster contract, verify that the validatePaymasterUserOp function is implemented with the correct logic, and that the user operation is supposed to be valid.","• If you are using a paymaster service, and the user operation is well formed with a high enough verificationGasLimit, reach out to them.","• If you are not looking to use a paymaster to cover the gas fees, verify that the paymasterAndData field is not set.","",n?`Docs: ${n}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"PaymasterValidationRevertedError"})}}Object.defineProperty(ve,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa33/});class Ae extends h{constructor({cause:t,paymasterAndData:a,docsPath:n}){const r=a?z(a):"0x";super([`The validatePaymasterUserOp function of the paymaster ${r} rejected paymasterAndData.`,"","Possible solutions:","• If you are using your own paymaster contract, verify that the user operation was correctly signed according to your implementation, and that the paymaster signature was correctly encoded in the paymasterAndData field of the user operation.","• If you are using a paymaster service, make sure you do not modify any of the fields of the user operation after the paymaster signs over it (except the signature field).","• If you are using a paymaster service and you have not modified any of the fields except the signature but you are still getting this error, reach out to them.","",n?`Docs: ${n}`:""].join(`
`),{cause:t}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"PaymasterDataRejectedError"})}}Object.defineProperty(Ae,"message",{enumerable:!0,configurable:!0,writable:!0,value:/aa34/});function We(e,t){const a=(e.details||"").toLowerCase(),n=e instanceof h?e.walk(r=>r.code===Me.code):e;return n instanceof h?new Me({cause:e,message:n.details}):t.userOperation.sender===void 0?new Y({cause:e}):t.userOperation.nonce===void 0?new Y({cause:e}):pe.message.test(a)?new pe({cause:e,sender:t.userOperation.sender,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa10"}):ye.message.test(a)?new ye({cause:e,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa13"}):me.message.test(a)?new me({cause:e,sender:t.userOperation.sender,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa14"}):fe.message.test(a)?new fe({cause:e,sender:t.userOperation.sender,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa15"}):he.message.test(a)?new he({cause:e,sender:t.userOperation.sender,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa20"}):ge.message.test(a)?new ge({cause:e,sender:t.userOperation.sender,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa21"}):be.message.test(a)?new be({cause:e,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa22"}):Pe.message.test(a)?new Pe({cause:e,sender:t.userOperation.sender,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa23"}):we.message.test(a)?new we({cause:e,sender:t.userOperation.sender,nonce:t.userOperation.nonce,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa25"}):De.message.test(a)?new De({cause:e,paymasterAndData:t.userOperation.paymasterAndData,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa30"}):Ge.message.test(a)?new Ge({cause:e,paymasterAndData:t.userOperation.paymasterAndData,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa31"}):xe.message.test(a)?new xe({cause:e,paymasterAndData:t.userOperation.paymasterAndData,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa32"}):ve.message.test(a)?new ve({cause:e,paymasterAndData:t.userOperation.paymasterAndData,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa33"}):Ae.message.test(a)?new Ae({cause:e,paymasterAndData:t.userOperation.paymasterAndData,docsPath:"https://docs.pimlico.io/bundler/reference/entrypoint-errors/aa34"}):new Y({cause:e})}function Gt(e,t){const a=(()=>{const n=We(e,t);return n instanceof Y?e:n})();throw new wt(a,{...t})}const Fe=async(e,t,a)=>{const{userOperation:n,entryPoint:r}=t,s=E(n),i=E(a);try{const d=await e.request({method:"eth_estimateUserOperationGas",params:a?[s,r,i]:[s,r]});if(T(r)==="v0.6"){const l=d;return{preVerificationGas:BigInt(l.preVerificationGas||0),verificationGasLimit:BigInt(l.verificationGasLimit||0),callGasLimit:BigInt(l.callGasLimit||0)}}const u=d;return{preVerificationGas:BigInt(u.preVerificationGas||0),verificationGasLimit:BigInt(u.verificationGasLimit||0),callGasLimit:BigInt(u.callGasLimit||0),paymasterVerificationGasLimit:u.paymasterVerificationGasLimit?BigInt(u.paymasterVerificationGasLimit):void 0,paymasterPostOpGasLimit:u.paymasterPostOpGasLimit?BigInt(u.paymasterPostOpGasLimit):void 0}}catch(d){throw Gt(d,t)}},xt=async(e,{hash:t})=>{const a=[t],n=await e.request({method:"eth_getUserOperationByHash",params:a});if(!n)return null;const{userOperation:r,entryPoint:s,transactionHash:i,blockHash:d,blockNumber:p}=n;return{userOperation:s===Ee?{...r,nonce:BigInt(r.nonce),callGasLimit:BigInt(r.callGasLimit),verificationGasLimit:BigInt(r.verificationGasLimit),preVerificationGas:BigInt(r.preVerificationGas),maxFeePerGas:BigInt(r.maxFeePerGas),maxPriorityFeePerGas:BigInt(r.maxPriorityFeePerGas)}:{...r,nonce:BigInt(r.nonce),callGasLimit:BigInt(r.callGasLimit),verificationGasLimit:BigInt(r.verificationGasLimit),preVerificationGas:BigInt(r.preVerificationGas),maxFeePerGas:BigInt(r.maxFeePerGas),maxPriorityFeePerGas:BigInt(r.maxPriorityFeePerGas),paymasterVerificationGasLimit:r.paymasterVerificationGasLimit?BigInt(r.paymasterVerificationGasLimit):void 0,paymasterPostOpGasLimit:r.paymasterVerificationGasLimit?BigInt(r.paymasterPostOpGasLimit):void 0},entryPoint:s,transactionHash:i,blockHash:d,blockNumber:BigInt(p)}},Ke=async(e,{hash:t})=>{const a=[t],n=await e.request({method:"eth_getUserOperationReceipt",params:a});return n?{userOpHash:n.userOpHash,entryPoint:n.entryPoint,sender:n.sender,nonce:BigInt(n.nonce),paymaster:n.paymaster,actualGasUsed:BigInt(n.actualGasUsed),actualGasCost:BigInt(n.actualGasCost),success:n.success,reason:n.reason,receipt:{transactionHash:n.receipt.transactionHash,transactionIndex:BigInt(n.receipt.transactionIndex),blockHash:n.receipt.blockHash,blockNumber:BigInt(n.receipt.blockNumber),from:n.receipt.from,to:n.receipt.to,cumulativeGasUsed:BigInt(n.receipt.cumulativeGasUsed),status:ht[n.receipt.status],gasUsed:BigInt(n.receipt.gasUsed),contractAddress:n.receipt.contractAddress,logsBloom:n.receipt.logsBloom,effectiveGasPrice:BigInt(n.receipt.effectiveGasPrice)},logs:n.logs.map(s=>({data:s.data,blockNumber:BigInt(s.blockNumber),blockHash:s.blockHash,transactionHash:s.transactionHash,logIndex:Number(s.logIndex),transactionIndex:Number(s.transactionIndex),address:s.address,topics:s.topics,removed:s.removed}))}:null};function vt(e,t){const a=(()=>{const n=We(e,t);return n instanceof Y?e:n})();throw new Dt(a,{...t})}const Xe=async(e,t)=>{const{userOperation:a,entryPoint:n}=t;try{return await e.request({method:"eth_sendUserOperation",params:[E(a),n]})}catch(r){throw vt(r,t)}},At=async e=>e.request({method:"eth_supportedEntryPoints",params:[]}),ce=new Map,Ue=new Map;let It=0;function St(e,t,a){const n=++It,r=()=>ce.get(e)||[],s=()=>{const l=r();ce.set(e,l.filter(o=>o.id!==n))},i=()=>{const l=Ue.get(e);r().length===1&&l&&l(),s()},d=r();if(ce.set(e,[...d,{id:n,fns:t}]),d&&d.length>0)return i;const p={};for(const l in t)p[l]=(...o)=>{var y,g;const c=r();if(c.length!==0)for(const f of c)(g=(y=f.fns)[l])==null||g.call(y,...o)};const u=a(p);return typeof u=="function"&&Ue.set(e,u),i}class Ot extends h{constructor({hash:t}){super(`Timed out while waiting for user operation with hash "${t}" to be confirmed.`),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"WaitForUserOperationReceiptTimeoutError"})}}const se=(e,{hash:t,pollingInterval:a=e.pollingInterval,timeout:n=e.transport.timeout})=>{const r=it(["waitForUserOperationReceipt",e.uid,t]);let s;return new Promise((i,d)=>{const p=St(r,{resolve:i,reject:d},async u=>{let l;const o=setInterval(async()=>{const c=y=>{clearInterval(o),y(),p(),n&&clearTimeout(l)};try{const y=await D(e,Ke,"getUserOperationReceipt")({hash:t});if(y!==null&&(s=y),s){c(()=>u.resolve(s));return}}catch(y){c(()=>u.reject(y));return}},a);n&&(l=setTimeout(()=>{clearInterval(o),p(),d(new Ot({hash:t})),clearTimeout(l)},n))})})},Et=async(e,t)=>{const{sender:a,entryPoint:n,key:r=BigInt(0)}=t;return await D(e,$e,"readContract")({address:n,abi:[{inputs:[{name:"sender",type:"address"},{name:"key",type:"uint192"}],name:"getNonce",outputs:[{name:"nonce",type:"uint256"}],stateMutability:"view",type:"function"}],functionName:"getNonce",args:[a,r]})},Ft=e=>t=>({sendUserOperation:async a=>Xe(t,{...a,entryPoint:e}),estimateUserOperationGas:(a,n)=>Fe(t,{...a,entryPoint:e},n),supportedEntryPoints:()=>At(t),chainId:()=>ft(t),getUserOperationByHash:a=>xt(t,a),getUserOperationReceipt:a=>Ke(t,a),waitForUserOperationReceipt:a=>se(t,a)});async function Tt(e,t,a){const{account:n=e.account,userOperation:r,middleware:s}=t;if(!n)throw new P;const i=w(n),[d,p,u,l]=await Promise.all([r.sender||i.address,r.nonce||i.getNonce(),r.initCode||i.getInitCode(),r.callData]),o={sender:d,nonce:p,initCode:u,callData:l,paymasterAndData:"0x",signature:r.signature||"0x",maxFeePerGas:r.maxFeePerGas||BigInt(0),maxPriorityFeePerGas:r.maxPriorityFeePerGas||BigInt(0),callGasLimit:r.callGasLimit||BigInt(0),verificationGasLimit:r.verificationGasLimit||BigInt(0),preVerificationGas:r.preVerificationGas||BigInt(0)};if(o.signature==="0x"&&(o.signature=await i.getDummySignature(o)),typeof s=="function")return s({userOperation:o,entryPoint:i.entryPoint});if(s&&typeof s!="function"&&s.gasPrice){const c=await s.gasPrice();o.maxFeePerGas=c.maxFeePerGas,o.maxPriorityFeePerGas=c.maxPriorityFeePerGas}if(!o.maxFeePerGas||!o.maxPriorityFeePerGas){const c=await He(i.client);o.maxFeePerGas=o.maxFeePerGas||c.maxFeePerGas,o.maxPriorityFeePerGas=o.maxPriorityFeePerGas||c.maxPriorityFeePerGas}if(s&&typeof s!="function"&&s.sponsorUserOperation){const c=await s.sponsorUserOperation({userOperation:o,entryPoint:i.entryPoint});return o.callGasLimit=c.callGasLimit,o.verificationGasLimit=c.verificationGasLimit,o.preVerificationGas=c.preVerificationGas,o.paymasterAndData=c.paymasterAndData,o.maxFeePerGas=c.maxFeePerGas||o.maxFeePerGas,o.maxPriorityFeePerGas=c.maxPriorityFeePerGas||o.maxPriorityFeePerGas,o}if(!o.callGasLimit||!o.verificationGasLimit||!o.preVerificationGas){const c=await D(e,Fe,"estimateUserOperationGas")({userOperation:o,entryPoint:i.entryPoint},a);o.callGasLimit|=c.callGasLimit,o.verificationGasLimit=o.verificationGasLimit||c.verificationGasLimit,o.preVerificationGas=o.preVerificationGas||c.preVerificationGas}return o}async function Ct(e,t,a){const{account:n=e.account,userOperation:r,middleware:s}=t;if(!n)throw new P;const i=w(n),[d,p,u,l,o]=await Promise.all([r.sender||i.address,r.nonce||i.getNonce(),r.factory||i.getFactory(),r.factoryData||i.getFactoryData(),r.callData]),c={sender:d,nonce:p,factory:u,factoryData:l,callData:o,callGasLimit:r.callGasLimit||BigInt(0),verificationGasLimit:r.verificationGasLimit||BigInt(0),preVerificationGas:r.preVerificationGas||BigInt(0),maxFeePerGas:r.maxFeePerGas||BigInt(0),maxPriorityFeePerGas:r.maxPriorityFeePerGas||BigInt(0),signature:r.signature||"0x"};if(c.signature==="0x"&&(c.signature=await i.getDummySignature(c)),typeof s=="function")return s({userOperation:c,entryPoint:i.entryPoint});if(s&&typeof s!="function"&&s.gasPrice){const y=await s.gasPrice();c.maxFeePerGas=y.maxFeePerGas,c.maxPriorityFeePerGas=y.maxPriorityFeePerGas}if(!c.maxFeePerGas||!c.maxPriorityFeePerGas){const y=await He(i.client);c.maxFeePerGas=c.maxFeePerGas||y.maxFeePerGas,c.maxPriorityFeePerGas=c.maxPriorityFeePerGas||y.maxPriorityFeePerGas}if(s&&typeof s!="function"&&s.sponsorUserOperation){const y=await s.sponsorUserOperation({userOperation:c,entryPoint:i.entryPoint});return c.callGasLimit=y.callGasLimit,c.verificationGasLimit=y.verificationGasLimit,c.preVerificationGas=y.preVerificationGas,c.paymaster=y.paymaster,c.paymasterVerificationGasLimit=y.paymasterVerificationGasLimit,c.paymasterPostOpGasLimit=y.paymasterPostOpGasLimit,c.paymasterData=y.paymasterData,c.maxFeePerGas=y.maxFeePerGas||c.maxFeePerGas,c.maxPriorityFeePerGas=y.maxPriorityFeePerGas||c.maxPriorityFeePerGas,c}if(!c.callGasLimit||!c.verificationGasLimit||!c.preVerificationGas){const y=await D(e,Fe,"estimateUserOperationGas")({userOperation:c,entryPoint:i.entryPoint},a);c.callGasLimit|=y.callGasLimit,c.verificationGasLimit=c.verificationGasLimit||y.verificationGasLimit,c.preVerificationGas=c.preVerificationGas||y.preVerificationGas,c.paymasterPostOpGasLimit=c.paymasterPostOpGasLimit||y.paymasterPostOpGasLimit}return c}async function Je(e,t,a){const{account:n=e.account}=t;if(!n)throw new P;const r=w(n);return T(r.entryPoint)==="v0.6"?Tt(e,t,a):Ct(e,t,a)}async function L(e,t){const{account:a=e.account}=t;if(!a)throw new P;const n=w(a),r=await D(e,Je,"prepareUserOperationRequest")(t);return r.signature=await n.signUserOperation(r),Xe(e,{userOperation:r,entryPoint:n.entryPoint})}async function Lt(e,t){const{abi:a,args:n,bytecode:r,middleware:s,...i}=t,{account:d=e.account}=i;if(!d)throw new P({docsPath:"/docs/actions/wallet/sendTransaction"});const p=w(d),u=await D(e,L,"sendUserOperation")({userOperation:{sender:p.address,maxFeePerGas:i.maxFeePerGas,maxPriorityFeePerGas:i.maxPriorityFeePerGas,callData:await p.encodeDeployCallData({abi:a,bytecode:r,args:n})},account:p,middleware:s}),l=await D(e,se,"waitForUserOperationReceipt")({hash:u});return l==null?void 0:l.receipt.transactionHash}async function Qe(e,t){const{account:a=e.account,data:n,maxFeePerGas:r,maxPriorityFeePerGas:s,to:i,value:d,nonce:p,middleware:u}=t;if(!a)throw new P({docsPath:"/docs/actions/wallet/sendTransaction"});const l=w(a);if(!i)throw new Error("Missing to address");if(l.type!=="local")throw new Error("RPC account type not supported");const o=await l.encodeCallData({to:i,value:d||BigInt(0),data:n||"0x"}),c=await D(e,L,"sendUserOperation")({userOperation:{sender:l.address,maxFeePerGas:r,maxPriorityFeePerGas:s,callData:o,nonce:p?BigInt(p):void 0},account:l,middleware:u}),y=await D(e,se,"waitForUserOperationReceipt")({hash:c});return y==null?void 0:y.receipt.transactionHash}async function _t(e,{account:t=e.account,message:a}){if(!t)throw new P({docsPath:"/docs/actions/wallet/signMessage"});const n=w(t);if(n.type==="local")return n.signMessage({message:a});throw new Error("Sign message is not supported by this account")}async function Mt(e,{account:t=e.account,domain:a,message:n,primaryType:r,types:s}){if(!t)throw new P({docsPath:"/docs/actions/wallet/signMessage"});const i=w(t),d={EIP712Domain:ot({domain:a}),...s};if(ct({domain:a,message:n,primaryType:r,types:d}),i.type==="local")return i.signTypedData({domain:a,primaryType:r,types:d,message:n});throw new Error("Sign type message is not supported by this account")}async function Bt(e,t){const{account:a=e.account,transactions:n,middleware:r,maxFeePerGas:s,maxPriorityFeePerGas:i,nonce:d}=t;if(!a)throw new P({docsPath:"/docs/actions/wallet/sendTransaction"});const p=w(a);if(p.type!=="local")throw new Error("RPC account type not supported");const u=await p.encodeCallData(n.map(({to:c,value:y,data:g})=>{if(!c)throw new Error("Missing to address");return{to:c,value:y||BigInt(0),data:g||"0x"}})),l=await D(e,L,"sendUserOperation")({userOperation:{sender:p.address,maxFeePerGas:s,maxPriorityFeePerGas:i,callData:u,nonce:d},account:p,middleware:r}),o=await D(e,se,"waitForUserOperationReceipt")({hash:l});return o==null?void 0:o.receipt.transactionHash}async function Ut(e,{abi:t,address:a,args:n,dataSuffix:r,functionName:s,...i}){const d=b({abi:t,args:n,functionName:s});return await D(e,Qe,"sendTransaction")({data:`${d}${r?r.replace("0x",""):""}`,to:a,...i})}function Vt({middleware:e}){return t=>({prepareUserOperationRequest:(a,n)=>Je(t,{...a,middleware:e},n),deployContract:a=>Lt(t,{...a,middleware:e}),sendTransaction:a=>Qe(t,{...a,middleware:e}),sendTransactions:a=>Bt(t,{...a,middleware:e}),sendUserOperation:a=>L(t,{...a,middleware:e}),signMessage:a=>_t(t,a),signTypedData:a=>Mt(t,a),writeContract:a=>Ut(t,{...a,middleware:e})})}function va(e){const{key:t="Account",name:a="Smart Account Client",bundlerTransport:n}=e;return Oe({...e,key:t,name:a,transport:n,type:"smartAccountClient"}).extend(Vt({middleware:e.middleware}))}class Ie extends h{constructor({docsPath:t}={}){super(["A smart account cannot sign or send transaction, it can only sign message or userOperation.","Please send user operation instead."].join(`
`),{docsPath:t,docsSlug:"account"}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"SignTransactionNotSupportedBySmartAccount"})}}const Ve="0x6492649264926492649264926492649264926492649264926492649264926492";function Nt({address:e,client:t,source:a,entryPoint:n,getNonce:r,getInitCode:s,getFactory:i,getFactoryData:d,encodeCallData:p,getDummySignature:u,encodeDeployCallData:l,signUserOperation:o,signMessage:c,signTypedData:y}){return{...ut({address:e,signMessage:async({message:f})=>{const v=await B(t,e),x=await c({message:f});if(v)return x;const F=te([{type:"address",name:"create2Factory"},{type:"bytes",name:"factoryCalldata"},{type:"bytes",name:"originalERC1271Signature"}],[await i()??"0x",await d()??"0x",x]);return ae([F,Ve])},signTypedData:async f=>{const v=await B(t,e),x=await y(f);if(v)return x;const F=te([{type:"address",name:"create2Factory"},{type:"bytes",name:"factoryCalldata"},{type:"bytes",name:"originalERC1271Signature"}],[await i()??"0x",await d()??"0x",x]);return ae([F,Ve])},async signTransaction(f,v){throw new Ie}}),source:a,client:t,type:"local",entryPoint:n,publicKey:e,getNonce:r,getInitCode:s,getFactory:i,getFactoryData:d,encodeCallData:p,getDummySignature:u,encodeDeployCallData:l,signUserOperation:o}}function Rt(e){switch(e){case"call":return"0x00";case"batchcall":return"0x01";case"delegatecall":return"0xff"}}function Se({type:e,revertOnError:t,selector:a,context:n}){return H(["bytes1","bytes1","bytes4","bytes4","bytes22"],[G($(Rt(e),{size:1})),G($(t?"0x01":"0x00",{size:1})),G($("0x0",{size:4})),G($(a??"0x",{size:4})),G($(n??"0x",{size:22}))])}async function kt(e,t){const{account:a=e.account,type:n,revertOnError:r,selector:s,context:i}=t;if(!a)throw new P({docsPath:"/docs/actions/wallet/sendTransaction"});const d=w(a),p=d.client,u=Se({type:n,revertOnError:r,selector:s,context:i}),l=[{name:"supportsExecutionMode",type:"function",stateMutability:"view",inputs:[{type:"bytes32",name:"encodedMode"}],outputs:[{type:"bool"}]}];try{return await p.readContract({abi:l,functionName:"supportsExecutionMode",args:[u],address:d.address})}catch(o){if(o instanceof ne){const c=await d.getFactory(),y=await d.getFactoryData(),g=await p.call({factory:c,factoryData:y,to:d.address,data:b({abi:l,functionName:"supportsExecutionMode",args:[u]})});if(!g||!g.data)throw new Error("accountId result is empty");return re({abi:l,functionName:"supportsExecutionMode",data:g.data})}throw o}}function Ne({mode:e,callData:t}){if(Array.isArray(t)&&(e==null?void 0:e.type)!=="batchcall")throw new Error(`mode ${JSON.stringify(e)} does not supported for batchcall calldata`);const a=[{type:"function",name:"execute",inputs:[{name:"execMode",type:"bytes32",internalType:"ExecMode"},{name:"executionCalldata",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"payable"}];return Array.isArray(t)?b({abi:a,functionName:"execute",args:[Se(e),te([{name:"executionBatch",type:"tuple[]",components:[{name:"target",type:"address"},{name:"value",type:"uint256"},{name:"callData",type:"bytes"}]}],[t.map(n=>({target:n.to,value:n.value,callData:n.data}))])]}):b({abi:a,functionName:"execute",args:[Se(e),de([t.to,G(t.value,{size:32}),t.data])]})}const jt=[{inputs:[{internalType:"bytes",name:"transactions",type:"bytes"}],name:"multiSend",outputs:[],stateMutability:"payable",type:"function"}],$t=[{type:"function",name:"initSafe7579",inputs:[{name:"safe7579",type:"address",internalType:"address"},{name:"executors",type:"tuple[]",internalType:"struct ModuleInit[]",components:[{name:"module",type:"address",internalType:"address"},{name:"initData",type:"bytes",internalType:"bytes"}]},{name:"fallbacks",type:"tuple[]",internalType:"struct ModuleInit[]",components:[{name:"module",type:"address",internalType:"address"},{name:"initData",type:"bytes",internalType:"bytes"}]},{name:"hooks",type:"tuple[]",internalType:"struct ModuleInit[]",components:[{name:"module",type:"address",internalType:"address"},{name:"initData",type:"bytes",internalType:"bytes"}]},{name:"attesters",type:"address[]",internalType:"address[]"},{name:"threshold",type:"uint8",internalType:"uint8"}],outputs:[],stateMutability:"nonpayable"}],Ht=[{type:"function",name:"preValidationSetup",inputs:[{name:"initHash",type:"bytes32",internalType:"bytes32"},{name:"to",type:"address",internalType:"address"},{name:"preInit",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"nonpayable"}],qt=[{inputs:[{internalType:"address[]",name:"modules",type:"address[]"}],name:"enableModules",outputs:[],stateMutability:"nonpayable",type:"function"}],Yt=[{inputs:[{internalType:"address[]",name:"_owners",type:"address[]"},{internalType:"uint256",name:"_threshold",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"address",name:"fallbackHandler",type:"address"},{internalType:"address",name:"paymentToken",type:"address"},{internalType:"uint256",name:"payment",type:"uint256"},{internalType:"address payable",name:"paymentReceiver",type:"address"}],name:"setup",outputs:[],stateMutability:"nonpayable",type:"function"}],zt=[{inputs:[{internalType:"address",name:"_singleton",type:"address"},{internalType:"bytes",name:"initializer",type:"bytes"},{internalType:"uint256",name:"saltNonce",type:"uint256"}],name:"createProxyWithNonce",outputs:[{internalType:"contract SafeProxy",name:"proxy",type:"address"}],stateMutability:"nonpayable",type:"function"}],Wt=[{inputs:[],name:"proxyCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"pure",type:"function"}],Kt=[{type:"function",name:"setupSafe",inputs:[{name:"initData",type:"tuple",internalType:"struct Safe7579Launchpad.InitData",components:[{name:"singleton",type:"address",internalType:"address"},{name:"owners",type:"address[]",internalType:"address[]"},{name:"threshold",type:"uint256",internalType:"uint256"},{name:"setupTo",type:"address",internalType:"address"},{name:"setupData",type:"bytes",internalType:"bytes"},{name:"safe7579",type:"address",internalType:"contract ISafe7579"},{name:"validators",type:"tuple[]",internalType:"struct ModuleInit[]",components:[{name:"module",type:"address",internalType:"address"},{name:"initData",type:"bytes",internalType:"bytes"}]},{name:"callData",type:"bytes",internalType:"bytes"}]}],outputs:[],stateMutability:"nonpayable"}],Xt=[{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint8",name:"operation",type:"uint8"}],name:"executeUserOpWithErrorString",outputs:[],stateMutability:"nonpayable",type:"function"}],Jt={SafeOp:[{type:"address",name:"safe"},{type:"uint256",name:"nonce"},{type:"bytes",name:"initCode"},{type:"bytes",name:"callData"},{type:"uint256",name:"callGasLimit"},{type:"uint256",name:"verificationGasLimit"},{type:"uint256",name:"preVerificationGas"},{type:"uint256",name:"maxFeePerGas"},{type:"uint256",name:"maxPriorityFeePerGas"},{type:"bytes",name:"paymasterAndData"},{type:"uint48",name:"validAfter"},{type:"uint48",name:"validUntil"},{type:"address",name:"entryPoint"}]},Qt={SafeOp:[{type:"address",name:"safe"},{type:"uint256",name:"nonce"},{type:"bytes",name:"initCode"},{type:"bytes",name:"callData"},{type:"uint128",name:"verificationGasLimit"},{type:"uint128",name:"callGasLimit"},{type:"uint256",name:"preVerificationGas"},{type:"uint128",name:"maxPriorityFeePerGas"},{type:"uint128",name:"maxFeePerGas"},{type:"bytes",name:"paymasterAndData"},{type:"uint48",name:"validAfter"},{type:"uint48",name:"validUntil"},{type:"address",name:"entryPoint"}]},j={"1.4.1":{"v0.6":{SAFE_MODULE_SETUP_ADDRESS:"0x8EcD4ec46D4D2a6B64fE960B3D64e8B94B2234eb",SAFE_4337_MODULE_ADDRESS:"0xa581c4A4DB7175302464fF3C06380BC3270b4037",SAFE_PROXY_FACTORY_ADDRESS:"0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67",SAFE_SINGLETON_ADDRESS:"0x41675C099F32341bf84BFc5382aF534df5C7461a",MULTI_SEND_ADDRESS:"0x38869bf66a61cF6bDB996A6aE40D5853Fd43B526",MULTI_SEND_CALL_ONLY_ADDRESS:"0x9641d764fc13c8B624c04430C7356C1C7C8102e2"},"v0.7":{SAFE_MODULE_SETUP_ADDRESS:"0x2dd68b007B46fBe91B9A7c3EDa5A7a1063cB5b47",SAFE_4337_MODULE_ADDRESS:"0x75cf11467937ce3F2f357CE24ffc3DBF8fD5c226",SAFE_PROXY_FACTORY_ADDRESS:"0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67",SAFE_SINGLETON_ADDRESS:"0x41675C099F32341bf84BFc5382aF534df5C7461a",MULTI_SEND_ADDRESS:"0x38869bf66a61cF6bDB996A6aE40D5853Fd43B526",MULTI_SEND_CALL_ONLY_ADDRESS:"0x9641d764fc13c8B624c04430C7356C1C7C8102e2"}}},Re=(e,t)=>{const a=[0,1,27,28],n=27;let r=Number.parseInt(t.slice(-2),16);if(!a.includes(r))throw new Error("Invalid signature");return e==="eth_sign"&&(r<n&&(r+=n),r+=4),e==="eth_signTypedData"&&r<n&&(r+=n),t.slice(0,-2)+r.toString(16)},ke=e=>{const t=e;return typeof t=="string"||t.raw?mt(t):qe(e)},Zt=e=>H(["uint8","address","uint256","uint256","bytes"],[e.operation,e.to,e.value,BigInt(e.data.slice(2).length/2),e.data]).slice(2),Ze=e=>{const t=`0x${e.map(a=>Zt(a)).join("")}`;return b({abi:jt,functionName:"multiSend",args:[t]})},et=({safe4337ModuleAddress:e,safeSingletonAddress:t,erc7579LaunchpadAddress:a,owner:n,validators:r,executors:s,fallbacks:i,hooks:d,attesters:p,attestersThreshold:u})=>({singleton:t,owners:[n],threshold:BigInt(1),setupTo:a,setupData:b({abi:$t,functionName:"initSafe7579",args:[e,s.map(o=>({module:o.address,initData:o.context})),i.map(o=>({module:o.address,initData:o.context})),d.map(o=>({module:o.address,initData:o.context})),p,u]}),safe7579:e,validators:r}),tt=async({owner:e,safeModuleSetupAddress:t,safe4337ModuleAddress:a,multiSendAddress:n,safeSingletonAddress:r,erc7579LaunchpadAddress:s,setupTransactions:i=[],safeModules:d=[],validators:p=[],executors:u=[],fallbacks:l=[],hooks:o=[],attesters:c=[],attestersThreshold:y=0})=>{if(s){const f=et({safe4337ModuleAddress:a,safeSingletonAddress:r,erc7579LaunchpadAddress:s,owner:e,validators:p,executors:u,fallbacks:l,hooks:o,attesters:c,attestersThreshold:y}),v=le(te([{internalType:"address",name:"singleton",type:"address"},{internalType:"address[]",name:"owners",type:"address[]"},{internalType:"uint256",name:"threshold",type:"uint256"},{internalType:"address",name:"setupTo",type:"address"},{internalType:"bytes",name:"setupData",type:"bytes"},{internalType:"contract ISafe7579",name:"safe7579",type:"address"},{internalType:"struct ModuleInit[]",name:"validators",type:"tuple[]",components:[{internalType:"address",name:"module",type:"address"},{internalType:"bytes",name:"initData",type:"bytes"}]}],[f.singleton,f.owners,f.threshold,f.setupTo,f.setupData,f.safe7579,f.validators.map(x=>({module:x.address,initData:x.context}))]));return b({abi:Ht,functionName:"preValidationSetup",args:[v,oe,"0x"]})}const g=Ze([{to:t,data:b({abi:qt,functionName:"enableModules",args:[[a,...d]]}),value:BigInt(0),operation:1},...i.map(f=>({...f,operation:0}))]);return b({abi:Yt,functionName:"setup",args:[[e],BigInt(1),n,g,a,oe,BigInt(0),oe]})};function ea(e){return e.paymaster?ae([e.paymaster,Be(G(e.paymasterVerificationGasLimit||BigInt(0)),{size:16}),Be(G(e.paymasterPostOpGasLimit||BigInt(0)),{size:16}),e.paymasterData||"0x"]):"0x"}const ta=async({owner:e,safeModuleSetupAddress:t,safe4337ModuleAddress:a,safeSingletonAddress:n,erc7579LaunchpadAddress:r,multiSendAddress:s,saltNonce:i=BigInt(0),setupTransactions:d=[],safeModules:p=[],validators:u=[],executors:l=[],fallbacks:o=[],hooks:c=[],attesters:y=[],attestersThreshold:g=0})=>{if(!e)throw new Error("Owner account not found");const f=await tt({owner:e,safeModuleSetupAddress:t,safe4337ModuleAddress:a,multiSendAddress:s,setupTransactions:d,safeSingletonAddress:n,safeModules:p,erc7579LaunchpadAddress:r,validators:u,executors:l,fallbacks:o,hooks:c,attesters:y,attestersThreshold:g});return b({abi:zt,functionName:"createProxyWithNonce",args:[r??n,f,i]})},aa=async({client:e,owner:t,safeModuleSetupAddress:a,safe4337ModuleAddress:n,safeProxyFactoryAddress:r,safeSingletonAddress:s,multiSendAddress:i,erc7579LaunchpadAddress:d,setupTransactions:p=[],safeModules:u=[],saltNonce:l=BigInt(0),validators:o=[],executors:c=[],fallbacks:y=[],hooks:g=[],attesters:f=[],attestersThreshold:v=0})=>{const x=await $e(e,{abi:Wt,address:r,functionName:"proxyCreationCode"}),F=await tt({owner:t,safeModuleSetupAddress:a,safe4337ModuleAddress:n,multiSendAddress:i,setupTransactions:p,safeSingletonAddress:s,safeModules:u,erc7579LaunchpadAddress:d,validators:o,executors:c,fallbacks:y,hooks:g,attesters:f,attestersThreshold:v}),q=H(["bytes","uint256"],[x,lt(d??s)]),V=le(H(["bytes32","uint256"],[le(H(["bytes"],[F])),l]));return pt({from:r,salt:V,bytecode:q,opcode:"CREATE2"})},na=(e,t,{addModuleLibAddress:a,safeModuleSetupAddress:n,safe4337ModuleAddress:r,safeProxyFactoryAddress:s,safeSingletonAddress:i,multiSendAddress:d,multiSendCallOnlyAddress:p})=>{const u=T(t),l=n??a??j[e][u].SAFE_MODULE_SETUP_ADDRESS,o=r??j[e][u].SAFE_4337_MODULE_ADDRESS,c=s??j[e][u].SAFE_PROXY_FACTORY_ADDRESS,y=i??j[e][u].SAFE_SINGLETON_ADDRESS,g=d??j[e][u].MULTI_SEND_ADDRESS,f=p??j[e][T(t)].MULTI_SEND_CALL_ONLY_ADDRESS;return{safeModuleSetupAddress:l,safe4337ModuleAddress:o,safeProxyFactoryAddress:c,safeSingletonAddress:y,multiSendAddress:g,multiSendCallOnlyAddress:f}};function je(e){return e.erc7579LaunchpadAddress!==void 0}async function Aa(e,t){var _e;const a=((_e=e.chain)==null?void 0:_e.id)??await dt(e),{signer:n,address:r,safeVersion:s,entryPoint:i,safe4337ModuleAddress:d,safeProxyFactoryAddress:p,safeSingletonAddress:u,erc7579LaunchpadAddress:l=t.erc7579LaunchpadAddress,saltNonce:o=BigInt(0),validUntil:c=0,validAfter:y=0,nonceKey:g}=t;let f,v,x,F,q=[],V=[],W=[],K=[],X=[],J=[],Q=0;je(t)||(f=t.safeModuleSetupAddress,v=t.multiSendAddress,x=t.multiSendCallOnlyAddress,F=t.safeModules,q=t.setupTransactions??[]),je(t)&&(V=t.validators??[],W=t.executors??[],K=t.fallbacks??[],X=t.hooks??[],J=t.attesters??[],Q=t.attestersThreshold??0);const _={...n,signTransaction:(m,S)=>{throw new Ie}},{safeModuleSetupAddress:Te,safe4337ModuleAddress:Z,safeProxyFactoryAddress:Ce,safeSingletonAddress:ie,multiSendAddress:Le,multiSendCallOnlyAddress:at}=na(s,i,{safeModuleSetupAddress:f,safe4337ModuleAddress:d,safeProxyFactoryAddress:p,safeSingletonAddress:u,multiSendAddress:v,multiSendCallOnlyAddress:x}),A=r??await aa({client:e,owner:_.address,safeModuleSetupAddress:Te,safe4337ModuleAddress:Z,safeProxyFactoryAddress:Ce,safeSingletonAddress:ie,multiSendAddress:Le,erc7579LaunchpadAddress:l,saltNonce:o,setupTransactions:q,safeModules:F,validators:V,executors:W,fallbacks:K,hooks:X,attesters:J,attestersThreshold:Q});if(!A)throw new Error("Account address not found");let I=await B(e,A);return Nt({address:A,client:e,publicKey:A,entryPoint:i,source:"SafeSmartAccount",async signMessage({message:m}){const S=qe({domain:{chainId:a,verifyingContract:A},types:{SafeMessage:[{name:"message",type:"bytes"}]},primaryType:"SafeMessage",message:{message:ke(m)}});return Re("eth_sign",await yt(e,{account:_,message:{raw:$(S)}}))},async signTransaction(m,S){throw new Ie},async signTypedData(m){return Re("eth_signTypedData",await ue(e,{account:_,domain:{chainId:a,verifyingContract:A},types:{SafeMessage:[{name:"message",type:"bytes"}]},primaryType:"SafeMessage",message:{message:ke(m)}}))},async getNonce(m){return Et(e,{sender:A,entryPoint:i,key:m??g})},async signUserOperation(m){const S={safe:A,callData:m.callData,nonce:m.nonce,initCode:m.initCode??"0x",maxFeePerGas:m.maxFeePerGas,maxPriorityFeePerGas:m.maxPriorityFeePerGas,preVerificationGas:m.preVerificationGas,verificationGasLimit:m.verificationGasLimit,callGasLimit:m.callGasLimit,paymasterAndData:m.paymasterAndData??"0x",validAfter:y,validUntil:c,entryPoint:i};let M=!1;gt(i)&&(S.paymasterAndData=m.paymasterAndData,M=m.initCode==="0x"),bt(i)&&(m.factory&&m.factoryData&&(S.initCode=de([m.factory,m.factoryData])),S.paymasterAndData=ea(m),M=!m.factory);let N=Z;l&&!M&&(N=m.sender);const R=[{signer:_.address,data:await ue(e,{account:_,domain:{chainId:a,verifyingContract:N},types:T(i)==="v0.6"?Jt:Qt,primaryType:"SafeOp",message:S})}];R.sort((O,k)=>O.signer.toLowerCase().localeCompare(k.signer.toLowerCase()));const ee=ae(R.map(O=>O.data));return H(["uint48","uint48","bytes"],[y,c,ee])},async getInitCode(){return I=I||await B(e,A),I?"0x":de([await this.getFactory()??"0x",await this.getFactoryData()??"0x"])},async getFactory(){if(I=I||await B(e,A),!I)return Ce},async getFactoryData(){if(I=I||await B(e,A),!I)return await ta({owner:_.address,safeModuleSetupAddress:Te,safe4337ModuleAddress:Z,safeSingletonAddress:ie,multiSendAddress:Le,erc7579LaunchpadAddress:l,saltNonce:o,setupTransactions:q,safeModules:F,validators:V,executors:W,fallbacks:K,hooks:X,attesters:J,attestersThreshold:Q})},async encodeDeployCallData(m){throw new Error("Safe account doesn't support account deployment")},async encodeCallData(m){const S=Array.isArray(m);if(l){if(I=I||await B(e,A),!I){const O=et({safe4337ModuleAddress:Z,safeSingletonAddress:ie,erc7579LaunchpadAddress:l,owner:_.address,validators:V,executors:W,fallbacks:K,hooks:X,attesters:J,attestersThreshold:Q});return b({abi:Kt,functionName:"setupSafe",args:[{...O,validators:O.validators.map(k=>({module:k.address,initData:k.context})),callData:Ne({mode:{type:S?"batchcall":"call",revertOnError:!1,selector:"0x",context:"0x"},callData:m})}]})}return Ne({mode:{type:S?"batchcall":"call",revertOnError:!1,selector:"0x",context:"0x"},callData:m})}let M,N,R,ee=0;if(S){const O=m;M=at,N=BigInt(0),R=Ze(O.map(k=>({...k,operation:0}))),ee=1}else{const O=m;M=O.to,R=O.data,N=O.value}return b({abi:Xt,functionName:"executeUserOpWithErrorString",args:[M,N,R,ee]})},async getDummySignature(m){return"0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}})}const ra=async e=>{const t=await e.request({method:"pimlico_getUserOperationGasPrice",params:[]});return{slow:{maxFeePerGas:BigInt(t.slow.maxFeePerGas),maxPriorityFeePerGas:BigInt(t.slow.maxPriorityFeePerGas)},standard:{maxFeePerGas:BigInt(t.standard.maxFeePerGas),maxPriorityFeePerGas:BigInt(t.standard.maxPriorityFeePerGas)},fast:{maxFeePerGas:BigInt(t.fast.maxFeePerGas),maxPriorityFeePerGas:BigInt(t.fast.maxPriorityFeePerGas)}}},sa=async(e,{hash:t})=>e.request({method:"pimlico_getUserOperationStatus",params:[t]}),ia=async(e,t)=>{const{compressedUserOperation:a,inflatorAddress:n,entryPoint:r}=t;return e.request({method:"pimlico_sendCompressedUserOperation",params:[a,n,r]})},oa=async(e,t)=>{const a=await e.request({method:"pm_sponsorUserOperation",params:t.sponsorshipPolicyId?[E(t.userOperation),t.entryPoint,{sponsorshipPolicyId:t.sponsorshipPolicyId}]:[E(t.userOperation),t.entryPoint]});if(t.entryPoint===Ee){const r=a;return{paymasterAndData:r.paymasterAndData,preVerificationGas:BigInt(r.preVerificationGas),verificationGasLimit:BigInt(r.verificationGasLimit),callGasLimit:BigInt(r.callGasLimit)}}const n=a;return{callGasLimit:BigInt(n.callGasLimit),verificationGasLimit:BigInt(n.verificationGasLimit),preVerificationGas:BigInt(n.preVerificationGas),paymaster:n.paymaster,paymasterVerificationGasLimit:BigInt(n.paymasterVerificationGasLimit),paymasterPostOpGasLimit:BigInt(n.paymasterPostOpGasLimit),paymasterData:n.paymasterData}},ca=e=>t=>({getUserOperationGasPrice:async()=>ra(t),getUserOperationStatus:async a=>sa(t,a),sendCompressedUserOperation:async a=>ia(t,{...a,entryPoint:e})}),ua=e=>t=>({sponsorUserOperation:async a=>oa(t,{...a,entryPoint:e}),validateSponsorshipPolicies:async a=>da(t,{...a,entryPoint:e})}),da=async(e,t)=>await e.request({method:"pm_validateSponsorshipPolicies",params:[E(t.userOperation),t.entryPoint,t.sponsorshipPolicyIds]}),Ia=e=>{const{key:t="public",name:a="Pimlico Bundler Client"}=e;return Oe({...e,key:t,name:a,type:"pimlicoBundlerClient"}).extend(Ft(e.entryPoint)).extend(ca(e.entryPoint))},Sa=e=>{const{key:t="public",name:a="Pimlico Paymaster Client"}=e;return Oe({...e,key:t,name:a,type:"pimlicoPaymasterClient"}).extend(ua(e.entryPoint))};async function la(e,t){let a=e.account;if(t&&(a=t.account),!a)throw new P({docsPath:"/docs/actions/wallet/sendTransaction"});const n=w(a),r=n.client,s=[{name:"accountId",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"string",name:"accountImplementationId"}]}];try{return await r.readContract({abi:s,functionName:"accountId",address:n.address})}catch(i){if(i instanceof ne){const d=await n.getFactory(),p=await n.getFactoryData(),u=await r.call({factory:d,factoryData:p,to:n.address,data:b({abi:s,functionName:"accountId"})});if(!u||!u.data)throw new Error("accountId result is empty");return re({abi:s,functionName:"accountId",data:u.data})}throw i}}function C(e){switch(e){case"validator":return BigInt(1);case"executor":return BigInt(2);case"fallback":return BigInt(3);case"hook":return BigInt(4);default:throw new Error("Invalid module type")}}async function pa(e,t){const{account:a=e.account}=t;if(!a)throw new P({docsPath:"/docs/actions/wallet/sendTransaction"});const n=w(a),r=n.client,s=[{name:"supportsModule",type:"function",stateMutability:"view",inputs:[{type:"uint256",name:"moduleTypeId"}],outputs:[{type:"bool"}]}];try{return await r.readContract({abi:s,functionName:"supportsModule",args:[C(t.type)],address:n.address})}catch(i){if(i instanceof ne){const d=await n.getFactory(),p=await n.getFactoryData(),u=await r.call({factory:d,factoryData:p,to:n.address,data:b({abi:s,functionName:"supportsModule",args:[C(t.type)]})});if(!u||!u.data)throw new Error("accountId result is empty");return re({abi:s,functionName:"supportsModule",data:u.data})}throw i}}async function ya(e,t){const{account:a=e.account,maxFeePerGas:n,maxPriorityFeePerGas:r,nonce:s,middleware:i,address:d,context:p}=t;if(!a)throw new P({docsPath:"/docs/actions/wallet/sendTransaction"});const u=w(a),l=await u.encodeCallData({to:u.address,value:BigInt(0),data:b({abi:[{name:"installModule",type:"function",stateMutability:"nonpayable",inputs:[{type:"uint256",name:"moduleTypeId"},{type:"address",name:"module"},{type:"bytes",name:"initData"}],outputs:[]}],functionName:"installModule",args:[C(t.type),U(d),p]})});return D(e,L,"sendUserOperation")({userOperation:{sender:u.address,maxFeePerGas:n,maxPriorityFeePerGas:r,callData:l,nonce:s},account:u,middleware:i})}async function ma(e,t){const{account:a=e.account,maxFeePerGas:n,maxPriorityFeePerGas:r,nonce:s,middleware:i,modules:d}=t;if(!a)throw new P({docsPath:"/docs/actions/wallet/sendTransaction"});const p=w(a),u=await p.encodeCallData(await Promise.all(d.map(({type:l,address:o,context:c})=>({to:p.address,value:BigInt(0),data:b({abi:[{name:"installModule",type:"function",stateMutability:"nonpayable",inputs:[{type:"uint256",name:"moduleTypeId"},{type:"address",name:"module"},{type:"bytes",name:"initData"}],outputs:[]}],functionName:"installModule",args:[C(l),U(o),c]})}))));return D(e,L,"sendUserOperation")({userOperation:{sender:p.address,maxFeePerGas:n,maxPriorityFeePerGas:r,callData:u,nonce:s},account:p,middleware:i})}async function fa(e,t){const{account:a=e.account,address:n,context:r}=t;if(!a)throw new P({docsPath:"/docs/actions/wallet/sendTransaction"});const s=w(a),i=s.client,d=[{name:"isModuleInstalled",type:"function",stateMutability:"view",inputs:[{type:"uint256",name:"moduleTypeId"},{type:"address",name:"module"},{type:"bytes",name:"additionalContext"}],outputs:[{type:"bool"}]}];try{return await i.readContract({abi:d,functionName:"isModuleInstalled",args:[C(t.type),U(n),r],address:s.address})}catch(p){if(p instanceof ne){const u=await s.getFactory(),l=await s.getFactoryData(),o=await i.call({factory:u,factoryData:l,to:s.address,data:b({abi:d,functionName:"isModuleInstalled",args:[C(t.type),U(n),r]})});if(!o||!o.data)throw new Error("accountId result is empty");return re({abi:d,functionName:"isModuleInstalled",data:o.data})}throw p}}async function ha(e,t){const{account:a=e.account,maxFeePerGas:n,maxPriorityFeePerGas:r,nonce:s,middleware:i,address:d,context:p}=t;if(!a)throw new P({docsPath:"/docs/actions/wallet/sendTransaction"});const u=w(a),l=await u.encodeCallData({to:u.address,value:BigInt(0),data:b({abi:[{name:"uninstallModule",type:"function",stateMutability:"nonpayable",inputs:[{type:"uint256",name:"moduleTypeId"},{type:"address",name:"module"},{type:"bytes",name:"deInitData"}],outputs:[]}],functionName:"uninstallModule",args:[C(t.type),U(d),p]})});return D(e,L,"sendUserOperation")({userOperation:{sender:u.address,maxFeePerGas:n,maxPriorityFeePerGas:r,callData:l,nonce:s},account:u,middleware:i})}async function ga(e,t){const{account:a=e.account,maxFeePerGas:n,maxPriorityFeePerGas:r,nonce:s,middleware:i,modules:d}=t;if(!a)throw new P({docsPath:"/docs/actions/wallet/sendTransaction"});const p=w(a),u=await p.encodeCallData(await Promise.all(d.map(({type:l,address:o,context:c})=>({to:p.address,value:BigInt(0),data:b({abi:[{name:"uninstallModule",type:"function",stateMutability:"nonpayable",inputs:[{type:"uint256",name:"moduleTypeId"},{type:"address",name:"module"},{type:"bytes",name:"deInitData"}],outputs:[]}],functionName:"uninstallModule",args:[C(l),U(o),c]})}))));return D(e,L,"sendUserOperation")({userOperation:{sender:p.address,maxFeePerGas:n,maxPriorityFeePerGas:r,callData:u,nonce:s},account:p,middleware:i})}function Oa(e){return t=>({accountId:a=>la(t,a),installModule:a=>ya(t,a),installModules:a=>ma(t,a),isModuleInstalled:a=>fa(t,a),supportsExecutionMode:a=>kt(t,a),supportsModule:a=>pa(t,a),uninstallModule:a=>ha(t,a),uninstallModules:a=>ga(t,a)})}async function ba(e,{userOperation:t,entryPoint:a,context:n,chain:r}){var l;const s=(r==null?void 0:r.id)??((l=e.chain)==null?void 0:l.id);if(!s)throw new Ye;const i=n?[E(t),a,G(s),n]:[E(t),a,G(s)],d=await e.request({method:"pm_getPaymasterData",params:i});if(T(a)==="v0.6")return{paymasterAndData:d.paymasterAndData};const u=d;return{paymaster:u.paymaster,paymasterData:u.paymasterData}}async function Pa(e,{userOperation:t,entryPoint:a,context:n,chain:r}){var l;const s=(r==null?void 0:r.id)??((l=e.chain)==null?void 0:l.id);if(!s)throw new Ye;const i=n?[E(t),a,G(s),n]:[E(t),a,G(s)],d=await e.request({method:"pm_getPaymasterStubData",params:i});if(T(a)==="v0.6"){const o=d;return{paymasterAndData:o.paymasterAndData,sponsor:o.sponsor,isFinal:o.isFinal}}const u=d;return{paymaster:u.paymaster,paymasterData:u.paymasterData,paymasterVerificationGasLimit:u.paymasterVerificationGasLimit?BigInt(u.paymasterVerificationGasLimit):void 0,paymasterPostOpGasLimit:u.paymasterPostOpGasLimit?BigInt(u.paymasterPostOpGasLimit):void 0,sponsor:u.sponsor,isFinal:u.isFinal}}const Ea=e=>t=>({getPaymasterData:a=>ba(t,{userOperation:a.userOperation,context:a.context,chain:a.chain,entryPoint:e}),getPaymasterStubData:async a=>Pa(t,{userOperation:a.userOperation,context:a.context,chain:a.chain,entryPoint:e})});export{Ga as E,Ee as a,va as b,Sa as c,xa as d,Ia as e,Ea as f,Et as g,Oa as h,B as i,ca as p,Aa as s};
